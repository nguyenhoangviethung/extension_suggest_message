chrome.storage.local.get("processedMessages", async (data) => {
    console.log(data)
})
document.addEventListener("DOMContentLoaded", function () {
    console.log("üöÄ Popup loaded");

    const messageDropdown = document.getElementById("messageDropdown");
    const outputText = document.getElementById("outputText");

    if (!messageDropdown || !outputText) {
        return;
    }

    chrome.storage.local.get("processedMessages", (data) => {
        console.log("D·ªØ li·ªáu l·∫•y t·ª´ storage:", data);

        if (chrome.runtime.lastError) {
            console.error("L·ªói l·∫•y d·ªØ li·ªáu t·ª´ storage:", chrome.runtime.lastError);
        }

        if (data.processedMessages && Array.isArray(data.processedMessages) && data.processedMessages.length > 0) {
            updateDropdown(data.processedMessages);
        } else {
            console.warn("Kh√¥ng c√≥ tin nh·∫Øn n√†o ƒë∆∞·ª£c l∆∞u trong storage.");
        }
    });

    function updateDropdown(messages) {
        console.log("C·∫≠p nh·∫≠t dropdown v·ªõi tin nh·∫Øn:", messages);

        messageDropdown.innerHTML = ""; 

        messages.forEach((msg, index) => {
            let option = document.createElement("option");
            option.value = index;
            option.textContent = `${msg.name}: ${msg.text}`;
            messageDropdown.appendChild(option);
        });

        if (messages.length > 0) {
            outputText.textContent = messages[0].text;
        }
    }

    messageDropdown.addEventListener("change", function () {

        chrome.storage.local.get("processedMessages", (data) => {

            if (!data.processedMessages || !Array.isArray(data.processedMessages)) {
                return;
            }

            const selectedMessage = data.processedMessages[this.value];
            if (selectedMessage) {
                outputText.textContent = selectedMessage.text;
            } else {
                console.warn("Kh√¥ng t√¨m th·∫•y tin nh·∫Øn cho index:", this.value);
            }
        });
    });
});
